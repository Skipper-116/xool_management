---
openapi: 3.0.1
info:
  title: Maphunziro API
  version: v1
  description: This is the Maphunziro engine
paths:
  "/api/v1/auth/login":
    post:
      summary: login authentication
      tags:
      - Authentication
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  auth_token:
                    type: string
                required:
                - auth_token
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                - message
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
              - username
              - password
  "/api/v1/classroom_facilities":
    get:
      summary: list classroom_facilities
      tags:
      - Classroom Facilities
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/classroom_facility"
    post:
      summary: create classroom facility i.e desks
      tags:
      - Classroom Facilities
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/classroom_facility"
        '422':
          description: invalid request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/common_error"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/classroom_facility"
  "/api/v1/classroom_facilities/{id}":
    get:
      summary: show classroom_facility
      tags:
      - Classroom Facilities
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/classroom_facility"
        '404':
          description: not found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/common_error"
    put:
      summary: update classroom_facility
      tags:
      - Classroom Facilities
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: successful
        '422':
          description: invalid request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/common_error"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/classroom_facility"
    delete:
      summary: delete classroom_facility
      tags:
      - Classroom Facilities
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/common_response"
        '404':
          description: not found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/common_error"
  "/api/v1/classroom_students":
    get:
      summary: list classroom_students
      responses:
        '200':
          description: successful
    post:
      summary: create classroom_student
      responses:
        '200':
          description: successful
  "/api/v1/classroom_students/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show classroom_student
      responses:
        '200':
          description: successful
    patch:
      summary: update classroom_student
      responses:
        '200':
          description: successful
    put:
      summary: update classroom_student
      responses:
        '200':
          description: successful
    delete:
      summary: delete classroom_student
      responses:
        '200':
          description: successful
  "/api/v1/people":
    get:
      summary: list people
      tags:
      - People
      responses:
        '200':
          description: people found
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/person"
    post:
      summary: create person
      tags:
      - People
      parameters: []
      responses:
        '201':
          description: successful
        '422':
          description: invalid request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/common_error"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/person"
  "/api/v1/people/{id}":
    get:
      summary: show person
      tags:
      - People
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: person found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/person"
        '404':
          description: not found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/common_error"
    put:
      summary: update person
      tags:
      - People
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: successful
        '422':
          description: invalid request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/common_error"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/person"
    delete:
      summary: delete person
      tags:
      - People
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: successful
        '404':
          description: not found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/common_error"
components:
  schemas:
    common_error:
      type: object
      properties:
        errors:
          type: array
          items:
            type: string
    common_response:
      type: object
      properties:
        message:
          type: string
    classroom_facility:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        quantity:
          type: number
          format: float
        classroom_id:
          type: integer
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
      required:
      - name
      - description
      - quantity
      - classroom_id
    classroom_student:
      type: object
      properties:
        id:
          type: integer
        classroom_id:
          type: integer
        cohort_id:
          type: integer
        person_id:
          type: integer
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        classroom:
          "$ref": "#/components/schemas/classroom"
        cohort:
          "$ref": "#/components/schemas/cohort"
        person:
          "$ref": "#/components/schemas/person"
      required:
      - classroom_id
      - cohort_id
      - person_id
    classroom_teachers:
      type: object
      properties:
        id:
          type: integer
        classroom_id:
          type: integer
        person_id:
          type: integer
        cohort_term_id:
          type: integer
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        classroom:
          "$ref": "#/components/schemas/classroom"
        person:
          "$ref": "#/components/schemas/person"
        cohort_term:
          "$ref": "#/components/schemas/cohort_term"
      required:
      - classroom_id
      - person_id
      - cohort_term_id
    classroom:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        space:
          type: number
          format: float
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
      required:
      - name
      - description
      - space
    cohort_term:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        cohort_id:
          type: integer
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        cohort:
          "$ref": "#/components/schemas/cohort"
      required:
      - name
      - start_date
      - end_date
      - cohort_id
    cohort:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        short_name:
          type: string
        description:
          type: string
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
      required:
      - name
      - short_name
      - description
      - start_date
      - end_date
    gender:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
      required:
      - name
      - description
    input_type:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        pattern:
          type: string
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
      required:
      - name
      - pattern
    person:
      type: object
      properties:
        id:
          type: integer
        birthdate:
          type: string
        gender_id:
          type: integer
        birthdate_estimated:
          type: boolean
          nullable: true
        voided:
          type: boolean
        void_reason:
          type: string
          nullable: true
        date_voided:
          type: string
          nullable: true
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        gender:
          "$ref": "#/components/schemas/gender"
      required:
      - birthdate
      - gender_id
      - birthdate_estimated
    person_attribute_type:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        is_required:
          type: boolean
        input_types_id:
          type: integer
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        input_type:
          "$ref": "#/components/schemas/input_type"
      required:
      - name
      - description
      - is_required
      - input_types_id
    person_attribute:
      type: object
      properties:
        id:
          type: integer
        attribute_value:
          type: string
        person_id:
          type: integer
        person_attribute_type_id:
          type: integer
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        person:
          "$ref": "#/components/schemas/person"
        person_attribute_type:
          "$ref": "#/components/schemas/person_attribute_type"
      required:
      - attribute_value
      - person_id
      - person_attribute_type_id
    person_name:
      type: object
      properties:
        id:
          type: integer
        given_name:
          type: string
        family_name:
          type: string
        middle_name:
          type: string
        maiden_name:
          type: string
        person_id:
          type: integer
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        person:
          "$ref": "#/components/schemas/person"
      required:
      - given_name
      - family_name
      - person_id
    profile_picture:
      type: object
      properties:
        id:
          type: integer
        image_url:
          type: string
        person_id:
          type: integer
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        person:
          "$ref": "#/components/schemas/person"
      required:
      - image_url
      - person_id
    relationship_type:
      type: object
      properties:
        id:
          type: integer
        a_is_to_b:
          type: string
        b_is_to_a:
          type: string
        description:
          type: string
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
      required:
      - a_is_to_b
      - b_is_to_a
      - description
    relationship:
      type: object
      properties:
        id:
          type: integer
        person_a:
          type: integer
        person_b:
          type: integer
        relationship_type_id:
          type: integer
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        relationship_type:
          "$ref": "#/components/schemas/relationship_type"
        primary:
          "$ref": "#/components/schemas/person"
        secondary:
          "$ref": "#/components/schemas/person"
      required:
      - person_a
      - person_b
      - relationship_type_id
    role:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
      required:
      - name
      - description
    student_registry:
      type: object
      properties:
        id:
          type: integer
        person_id:
          type: integer
        classroom_id:
          type: integer
        cohort_term_id:
          type: integer
        captured_by:
          type: integer
        present:
          type: boolean
        absent_reason:
          type: string
          nullable: true
        obs_datetime:
          type: string
          format: date_time
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        person:
          "$ref": "#/components/schemas/person"
        classroom:
          "$ref": "#/components/schemas/classroom"
        cohort_term:
          "$ref": "#/components/schemas/cohort_term"
        captured_by_user:
          "$ref": "#/components/schemas/person"
      required:
      - person_id
      - classroom_id
      - cohort_term_id
      - captured_by
      - present
      - obs_datetime
    subject:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
      required:
      - name
      - description
    teacher_registry:
      type: object
      properties:
        id:
          type: integer
        person_id:
          type: integer
        cohort_id:
          type: integer
        captured_by:
          type: integer
        present:
          type: boolean
        absent_reason:
          type: string
          nullable: true
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        person:
          "$ref": "#/components/schemas/person"
        cohort:
          "$ref": "#/components/schemas/cohort"
        captured_by_user:
          "$ref": "#/components/schemas/person"
      required:
      - person_id
      - cohort_id
      - captured_by
      - present
    teacher_subject:
      type: object
      properties:
        id:
          type: integer
        person_id:
          type: integer
        subject_id:
          type: integer
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        person:
          "$ref": "#/components/schemas/person"
        subject:
          "$ref": "#/components/schemas/subject"
      required:
      - person_id
      - subject_id
    test_record:
      type: object
      properties:
        id:
          type: integer
        person_id:
          type: integer
        classroom_id:
          type: integer
        cohort_term_id:
          type: integer
        subject_id:
          type: integer
        title:
          type: string
        content:
          type: string
        other_resources:
          type: string
        start_date:
          type: string
          format: date_time
        end_date:
          type: string
          format: date_time
        results_available:
          type: string
          format: date_time
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        person:
          "$ref": "#/components/schemas/person"
        classroom:
          "$ref": "#/components/schemas/classroom"
        cohort_term:
          "$ref": "#/components/schemas/cohort_term"
        subject:
          "$ref": "#/components/schemas/subject"
      required:
      - person_id
      - classroom_id
      - cohort_term_id
      - subject_id
      - title
      - content
      - start_date
      - end_date
      - results_available
    test_result:
      type: object
      properties:
        id:
          type: integer
        test_record_id:
          type: integer
        person_id:
          type: integer
        grade:
          type: number
          format: float
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        test_record:
          "$ref": "#/components/schemas/test_record"
        person:
          "$ref": "#/components/schemas/person"
      required:
      - test_record_id
      - person_id
      - grade
    test_type:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        scale:
          type: number
          format: float
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
      required:
      - name
      - description
      - scale
    user_role:
      type: object
      properties:
        id:
          type: integer
        person_id:
          type: integer
        role_id:
          type: integer
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
        person:
          "$ref": "#/components/schemas/person"
        role:
          "$ref": "#/components/schemas/role"
      required:
      - person_id
      - role_id
    login:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
      - username
      - password
servers:
- url: "{defaultHost}"
  variables:
    defaultHost:
      default: http://localhost:3000
